//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eraser {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Eraser.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} left.
        /// </summary>
        internal static string _0__left {
            get {
                return ResourceManager.GetString("{0} left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} out of {1}.
        /// </summary>
        internal static string _0__out_of__1_ {
            get {
                return ResourceManager.GetString("{0} out of {1}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid file erasure method was selected..
        /// </summary>
        internal static string An_invalid_file_erasure_method_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid file erasure method was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid language was selected..
        /// </summary>
        internal static string An_invalid_language_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid language was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid randomness data source was selected..
        /// </summary>
        internal static string An_invalid_randomness_data_source_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid randomness data source was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid unused disk space erasure method was selected..
        /// </summary>
        internal static string An_invalid_unused_disk_space_erasure_method_was_selected_ {
            get {
                return ResourceManager.GetString("An invalid unused disk space erasure method was selected.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string Completed {
            get {
                return ResourceManager.GetString("Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed with errors.
        /// </summary>
        internal static string Completed_with_errors {
            get {
                return ResourceManager.GetString("Completed with errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed with warnings.
        /// </summary>
        internal static string Completed_with_warnings {
            get {
                return ResourceManager.GetString("Completed with warnings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load list of files used for plausible deniability.\n\nThe list of files have been lost..
        /// </summary>
        internal static string Could_not_load_list_of_files_used_for_plausible_deniability__n_nThe_list_of_files_have_been_lost_ {
            get {
                return ResourceManager.GetString("Could not load list of files used for plausible deniability.\\n\\nThe list of files" +
                        " have been lost.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load plugin settings. All settings have been lost..
        /// </summary>
        internal static string Could_not_load_plugin_settings__All_settings_have_been_lost_ {
            get {
                return ResourceManager.GetString("Could not load plugin settings. All settings have been lost.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load task list. All task entries have been lost..
        /// </summary>
        internal static string Could_not_load_task_list__All_task_entries_have_been_lost_ {
            get {
                return ResourceManager.GetString("Could not load task list. All task entries have been lost.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default file erasure method.
        /// </summary>
        internal static string Default_file_erasure_method {
            get {
                return ResourceManager.GetString("Default file erasure method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default unused space erasure method.
        /// </summary>
        internal static string Default_unused_space_erasure_method {
            get {
                return ResourceManager.GetString("Default unused space erasure method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erase Schedule.
        /// </summary>
        internal static string Erase_Schedule {
            get {
                return ResourceManager.GetString("Erase Schedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser.
        /// </summary>
        internal static string Eraser {
            get {
                return ResourceManager.GetString("Eraser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Erasures with plausible deniability was selected, but no files were selected to be used as decoys..
        /// </summary>
        internal static string Erasures_with_plausible_deniability_was_selected__but_no_files_were_selected_to_be_used_as_decoys_ {
            get {
                return ResourceManager.GetString("Erasures with plausible deniability was selected, but no files were selected to b" +
                        "e used as decoys.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file path.
        /// </summary>
        internal static string Invalid_file_path {
            get {
                return ResourceManager.GetString("Invalid file path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid folder path.
        /// </summary>
        internal static string Invalid_folder_path {
            get {
                return ResourceManager.GetString("Invalid folder path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not completed.
        /// </summary>
        internal static string Not_completed {
            get {
                return ResourceManager.GetString("Not completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not queued.
        /// </summary>
        internal static string Not_queued {
            get {
                return ResourceManager.GetString("Not queued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queued for execution.
        /// </summary>
        internal static string Queued_for_execution {
            get {
                return ResourceManager.GetString("Queued for execution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queued for execution..
        /// </summary>
        internal static string Queued_for_execution_ {
            get {
                return ResourceManager.GetString("Queued for execution.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Randomness data source.
        /// </summary>
        internal static string Randomness_data_source {
            get {
                return ResourceManager.GetString("Randomness data source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running....
        /// </summary>
        internal static string Running___ {
            get {
                return ResourceManager.GetString("Running...", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The erasure method selected does .
        /// </summary>
        internal static string The_erasure_method_selected_does {
            get {
                return ResourceManager.GetString("The erasure method selected does", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following settings held invalid values:\n\n{0}\nThese settings have now been set to naive defaults.\n\nPlease check that the new settings suit your required level of security..
        /// </summary>
        internal static string The_following_settings_held_invalid_values__n_n_0__nThese_settings_have_now_been_set_to_naive_defaults__n_nPlease_check_that_the_new_settings_suit_your_required_level_of_security_ {
            get {
                return ResourceManager.GetString("The following settings held invalid values:\\n\\n{0}\\nThese settings have now been " +
                        "set to naive defaults.\\n\\nPlease check that the new settings suit your required " +
                        "level of security.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new randomness data source will only be used when the next task is run.\nCurrently running tasks will use the old source..
        /// </summary>
        internal static string The_new_randomness_data_source_will_only_be_used_when_the_next_task_is_run__nCurrently_running_tasks_will_use_the_old_source_ {
            get {
                return ResourceManager.GetString("The new randomness data source will only be used when the next task is run.\\nCurr" +
                        "ently running tasks will use the old source.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task has no data to erase..
        /// </summary>
        internal static string The_task_has_no_data_to_erase_ {
            get {
                return ResourceManager.GetString("The task has no data to erase.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The task needs to run .
        /// </summary>
        internal static string The_task_needs_to_run {
            get {
                return ResourceManager.GetString("The task needs to run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total: {0}%.
        /// </summary>
        internal static string Total___0__ {
            get {
                return ResourceManager.GetString("Total: {0}%", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User interface language.
        /// </summary>
        internal static string User_interface_language {
            get {
                return ResourceManager.GetString("User interface language", resourceCulture);
            }
        }
    }
}
